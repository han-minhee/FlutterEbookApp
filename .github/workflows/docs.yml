name: Documentation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  generate-docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Get dependencies for packages
      run: |
        cd packages/reader_widget && flutter pub get
        cd ../components/commons && flutter pub get
        cd ../components/lcp && flutter pub get
        cd ../components/navigator && flutter pub get
        cd ../components/opds && flutter pub get
        cd ../components/server && flutter pub get
        cd ../components/shared && flutter pub get
        cd ../components/streamer && flutter pub get
        cd ../demo-app && flutter pub get
        
    - name: Generate API documentation
      run: |
        echo "Generating API documentation..."
        flutter pub global activate dartdoc
        flutter pub global run dartdoc --output docs/api
        
    - name: Generate coverage report
      run: |
        echo "Generating coverage report..."
        flutter test --coverage
        flutter pub global activate coverage
        flutter pub global run coverage:format_coverage --lcov --in=coverage/lcov.info --out=coverage/lcov.info --packages=.packages --report-on=lib
        
    - name: Generate test report
      run: |
        echo "Generating test report..."
        flutter test --reporter=json > test-results.json
        
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          docs/
          coverage/
          test-results.json
        retention-days: 30

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: generate-docs
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Download documentation
      uses: actions/download-artifact@v4
      with:
        name: documentation
        path: docs/
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        cname: your-domain.com # Replace with your actual domain